#include <bits/stdc++.h>
using namespace std;
const int nm = 1e5 + 9;
const int N = 1e3 + 9;
const int LOG = 17; 
#define el '\n'
vector <int> adj[nm];
bool used[nm]; 
int n,q,par[nm],h[nm],up[nm][LOG + 1]; 

void dfs(int u){
	used[u] = true; 
	for (auto v : adj[u])
		if (!used[v]){
			h[v] = h[u] + 1; 
			used[v] = true; 
			par[v] = u; 
			dfs(v); 
		}
}

int lca(int u, int v){
	if (h[u] < h[v]) swap(u,v); 
	while (h[u] > h[v]){
		u = par[u]; 
	}
	while (u != v){
		u = par[u]; 
		v = par[v]; 
	}
	return u; 
}

signed main (){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	cin >> n >> q; 
	for (int i = 1; i < n; i++){
		int u,v; cin >> u >> v; 
		adj[u].push_back(v); 
		adj[v].push_back(u); 
	} 
	dfs(1);
	while (q--){
		int u,v; cin >> u >> v; 
		cout << lca(u,v) << el; 
	}
	return 0;
}
