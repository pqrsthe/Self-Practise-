#include <bits/stdc++.h>
using namespace std;

#define el '\n'
#define int long long
#define st first
#define nd second
#define pii pair<pair<long long, long long>,pair<long long,long long>>

const int INTMAX = 2e9;
const int nm = 2e5 + 9;
pii a[nm];
int tmp[nm];

bool cmp(pii a, pii b){
	if (a.nd.nd != b.nd.nd) return a.nd.nd > b.nd.nd; 
//	if (a.nd.nd == b.nd.nd and a.nd.nd == 1 and a.nd.st != b.nd.st) return a.nd.st > b.nd.st; 
	if (a.nd.nd == b.nd.nd and a.nd.nd == 1) return a.st.st < b.st.st;  
	if (a.nd.nd == b.nd.nd and a.nd.nd == 0 and a.st.nd != b.st.nd) return a.st.nd > b.st.nd;  
	if (a.nd.nd == b.nd.nd and a.nd.nd == 0 and a.st.nd == b.st.nd) return a.st.st > b.st.st; 
}

void solve(){
	int n; cin >> n;
	for (int i = 1; i <= n; i++) cin >> a[i].st.st;
	for (int i = 1; i <= n; i++) cin >> a[i].st.nd;  
	for (int i = 1; i <= n; i++){
		a[i].nd.st = a[i].st.nd - a[i].st.st; 
		if (a[i].nd.st >= 0) a[i].nd.nd = 1; 
		else a[i].nd.nd = 0; 	
	}
	int ans = 0, sum = 0; 
	sort (a + 1, a + 1 + n, cmp); 
	for (int i = 1; i <= n; i++){
		int x = a[i].st.st; 
		int y = a[i].st.nd; 
		if (sum < x){
			ans += (x - sum); 	
			sum += (x - sum) + y - x; 
		}
		else{
			sum += y - x; 
		}
	}
	cout << ans << el; 
}

signed main (){
	int t; t = 1;
	while (t--){
		solve();
	}
	return 0;
}
