#include <bits/stdc++.h>
using namespace std;
#define int long long
const int nm = 1e6 + 9;
const int N = 2e6 + 9;
const int MOD = 1e9 + 7;
const int LOG = 23;
#define el '\n'
#define pii pair<int,int>
int n,m,cnt1,cnt2,ans; 
string str,a[N],b[N];
int A[N],B[N]; 
bool status = false;
map<int,int> cnt; 
void backtrack1(int status, int l, int r){
	if (l == r){
		reverse(str.begin(),str.end()); string str2 = str; 
		reverse(str.begin(),str.end()); 
		for (int i = 0; i <= 9; i++){
			if (!status && i == 0) continue; 
			b[++cnt2] = str + char(i+'0') + str2; 
		}
		return; 
	}
	if (l > r){
		reverse(str.begin(),str.end()); string str2 = str; 
		reverse(str.begin(),str.end()); 
		b[++cnt2] = str + str2; 
		return;
	} 
	for (int i = 0; i <= 9; i++){
		if (status == false && i == 0) continue;  
		str = str + char(i+'0'); 
		backtrack1(true,l+1,r-1); 
		str.pop_back(); 
	}
} 

void backtrack2(int l, int r){
	if (l == r){
		reverse(str.begin(),str.end()); string str2 = str; 
		reverse(str.begin(),str.end()); 
		for (int i = 0; i <= 9; i++){
			a[++cnt1] = str + char(i+'0') + str2; 
		}
		return; 
	}
	if (l > r){
		reverse(str.begin(),str.end()); string str2 = str; 
		reverse(str.begin(),str.end()); 
		a[++cnt1] = str + str2; 
		return;
	} 
	for (int i = 0; i <= 9; i++){
		str = str + char(i+'0'); 
		backtrack2(l+1,r-1); 
		str.pop_back(); 
	}
} 

signed main (){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	cin >> n >> m; int Pow = 1; 
	for (int i = 1; i <= n/2; i++) Pow *= 10;
	backtrack1(status,1,n/2);  
	backtrack2(1,n/2); 
	for (int i = 1; i <= cnt1; i++){
//		cout << a[i] << el; 
		A[i] = stoll(a[i]); A[i] %= m; cnt[A[i]]++; 
	}
	for (int i = 1; i <= cnt2; i++){
//		cout << b[i] << el; 
		B[i] = stoll(b[i]); B[i] %= m; B[i] *= Pow; B[i] %= m; 
	}
	for (int i = 1; i <= cnt2; i++){
		if (B[i] == 0) ans += cnt[0]; 
		else ans += cnt[m - B[i]]; 
	}
	cout << ans; 
	return 0;
}
