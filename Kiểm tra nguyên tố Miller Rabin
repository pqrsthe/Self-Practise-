#include <bits/stdc++.h>
#define int long long
using namespace std;
#define el '\n'
#define ll long long
#define pb push_back
#define pii pair<int,int>
#define task "test"
const int N = 5e2 + 9;
const int MAX = 1e5 + 9;
const int M = 102;
const int MOD = 1e9 + 7;
const int INF = 1e9;
const int Blocksize = 330;
const double del = 1e-9;
ll n;
ll ltnp(ll a, ll b, ll m){
    a = a % n;
    ll res = 1;
    while (b){
        if (b & 1) res = (res * a) % m;
        a = (a * a) % m;
        b /= 2;
    }
    return res;
}
bool test(ll a, ll m, ll k, ll n){
    ll cur = ltnp(a,m,n);
    if (cur == 1 || cur == (n-1)) return true;
    for (int l = 1; l < k; l++){
        cur = (cur * cur) % n;
        if (cur == (n-1)) return true;
    }
    return false;
}
bool miller_rabin(ll n){
    if (n == 2 || n == 3 || n == 5 || n == 7) return true;
    if (n < 11) return false;
    int repeat = 10;
    ll k = 0, m = n - 1;
    while (m % 2 == 0){
        m /= 2;
        k++;
    }
    for (int i = 0; i < repeat; i++){
        ll a = rand() % (n-3) + 2;
        bool ok = test(a,m,k,n);
        if (ok) continue;
        else return false;
    }
    return true;
}
void Input(){
    cin >> n;
}
void solve(){
    if (miller_rabin(n)){
        cout << "YES";
    }
    else cout << "NO";
}
signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr); cout.tie(nullptr);
    freopen (task".inp","r",stdin);
    freopen (task".out","w",stdout);
    int t; t = 1;
    while (t--){
        Input();
        solve();
    }
    return 0;
}
