#include <bits/stdc++.h>
using namespace std;
//https://usaco.guide/gold/dsu?lang=cpp
const int nm = 1e6 + 9;
const int N = 2e5 + 9;
const int MOD = 1e9 + 7;
const int LOG = 23;
#define el '\n'
#define pii pair<int,int>
int n,m,res[N];
int par[N],sz[N],query[N]; 
bool mark[N]; 
vector<int> g[N];
pii edge[N]; 
void make_set(){
	for (int u = 1; u <= n; u++){
		par[u] = u; sz[u] = 1; 
	}
}

int find_set(int v){
	if (v == par[v]) return v; 
	return par[v] = find_set(par[v]); 
}

bool Union(int u, int v){
	u = find_set(u); v = find_set(v); 
	if (u == v) return false; 
	if (sz[u] < sz[v]) swap(u,v); 
	sz[u] += sz[v]; par[v] = u; 
	return true; 	
}

void Inp(){
	cin >> n >> m; 
	for (int i = 1; i <= m; i++){
		int u,v; cin >> u >> v; 
		edge[i] = {u,v}; 
		g[u].push_back(v); 
		g[v].push_back(u); 
	}
	for (int i = 1; i <= n; i++){
		cin >> query[i]; 
	}
}

signed main (){
	freopen ("closing.in","r",stdin); 
	freopen ("closing.out","w",stdout);
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	Inp(); make_set(); 
	int comp = 1; mark[query[n]] = 1; res[n] = 1; 
	for (int i = n-1; i >= 1; i--){
		comp++; 
		int u = query[i]; 
		mark[u] = 1; 
		for (auto v : g[u]){
			if (mark[v] == 1){
				if (Union(u,v)) comp--; 
			}
		}
		res[i] = comp; 
	} 
	for (int i = 1; i <= n; i++) 
		if (res[i] > 1) cout << "NO" << el; 
		else cout << "YES" << el; 
	return 0;
}
