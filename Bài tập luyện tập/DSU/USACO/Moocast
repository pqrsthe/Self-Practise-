#include <bits/stdc++.h>
using namespace std;
//https://usaco.guide/gold/dsu?lang=cpp
#define int long long
const int nm = 1e6 + 9;
const int N = 1e6 + 9;
const int MOD = 1e9 + 7;
const int LOG = 23;
const long long INF = 2e12;
#define el '\n'
#define pii pair<int,int>
int n,m,p[N],cnt=0,ans=INF; 
int sz[N],par[N],x[N],y[N];
struct Data{
	int u,v,w; 
};
Data edge[N]; 
bool cmp(Data a, Data b){
	return a.w < b.w; 
}

void make_set(){
	for (int u = 1; u <= cnt; u++){
		par[u] = u; sz[u] = 1;
	}
}

int find_set(int v){
	if (v == par[v]) return v; 
	else return par[v] = find_set(par[v]);
}

bool Union(int u, int v){
	u = find_set(u); v = find_set(v); 
	if (u == v) return false; 
	if (sz[u] < sz[v]) swap(u,v); 
	sz[u] += sz[v]; par[v] = u; 
	return true;
}

void MST(){
	make_set(); 
	sort(edge+1,edge+1+cnt,cmp);
	for (int i = 1; i <= cnt; i++){
		if (Union(edge[i].u,edge[i].v)){
			ans = edge[i].w; 
		}
	}
	cout << ans; 
}

signed main (){
	freopen ("moocast.in","r",stdin); 
	freopen ("moocast.out","w",stdout);
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	cin >> n;
	for (int i = 1; i <= n; i++){
		cin >> x[i] >> y[i]; 
	}
	for (int i = 1; i <= n; i++){
		for (int j = i + 1; j <= n; j++){
			int w = (x[j]-x[i])*(x[j]-x[i]) + (y[j]-y[i])*(y[j]-y[i]); 
			cnt++; edge[cnt] = {i,j,w};
		}
	}
	MST(); 
	return 0;
}
